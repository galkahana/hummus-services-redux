# this file is a sample to use when installing hummus package with helm install.
# use it to provide values for env vars, and maybe decide on replicacount. 
# then you can do something like this:
# helm install hummus-local hummus -n hummus-helm --create-namespace  -f ./values.yaml
# and upgrade later with:
# helm upgrade hummus-local hummus -n hummus-helm  -f ./values.yaml

# the default values setup is aimed for local minikube where you get to build and deploy your local docker.
# want to use a built image? the project holds them at ghcr.io/galkahana/hummus-services-redux
# this should be good for your setup if you are not building by yourself:
#image:
#  repository: ghcr.io/galkahana/hummus-services-redux
#  pullPolicy: IfNotPresent
#  tag: v0.0.9


# default is 1, so you can spoil yrself with sample more
#replicaCount: 2

# all the env vars, as helm variables. some will be secret, some config. 
# required for minimal activity
#mongodbUri: 
#jwtKey: 

# required for generating job (bucket upload creds)
#awsAccessKeyId: 
#awsSecretAccessKey: 
# optionally you can also add awsBucket and awsRegion if you wish to override the default
# bucket name which is hummus-services and region which is us-west-2

# signup stuff, so only needed if you want to run signup
#recaptchaKey: 
#recaptchaSecret: 
#sendgridApiKey: 
#adminEmail: 
#joinEmail: 
#supportEmail: 
#emailServiceUrl: 

# hummus got it's ingress. so if you dont want it turn it off with:
#ingress:
#   enabled: false
#
#the ingress setup is intended for your local minikube setup. so if you want to setup your own domain, just configure it a bit, like this:
#ingress:
#  enabled: true
#  annotations:
#      kubernetes.io/ingress.class: nginx
#      cert-manager.io/issuer: "letsencrypt-prod"
#  hosts:
#    - host: services.pdfhummus.com
#      paths:
#        - path: /
#          pathType: Prefix
#          backendService: hummus
#          backendPort: 8080
#  tls:
#    - secretName: hummus-ingress-tls
#      hosts:
#        - services.pdfhummus.com
# (this setup assumes you got cert manager and ngynx installed. drop whatever you don't need)


# you can enable metrics (prometheus and grafana)
#metrics:
#  enabled: true
# If enabling metrics you will also probably want to define grafana datasources note that you should be used the
# service name below, for prometheus. it'll be http://<release-name>-prometheus-service
#grafana
#  datasources:
#    datasources.yaml:
#      apiVersion: 1
#      datasources:
#      - name: Prometheus
#        type: prometheus
#        # Here's something i don't like so much...i need the actual service name...and it's based
#        # on the release name. could give up and say, install your own datasources..but what's the point...
#        # k. let's fix this if it ever matters
#        url: http://hummus-local-prometheus-server 
#        access: proxy
#        isDefault: true


# also logging (elasticsearch, fluentd, kibana)
#logging:
#    enabled: true


# use externalServices if you got wierd setup where mongo is setup to be yr
# host name, and then you can't just access it with the url provided as mongodbUri
#externalServices:
#  - name: mongo
#    externalName: host.minikube.internal
