# hummus app configuration

# yeah...i want to know what names yr giving
fullnameOverride: hummus
nameOverride: hummus

# configmap
adminEmail: ""
joinEmail: ""
supportEmail: ""
emailServiceUrl: ""
awsRegion: ""
awsBucket: ""
# secret
mongodbUri: ""
sendgridApiKey: ""
awsAccessKeyId: ""
awsSecretAccessKey: ""
recaptchaKey: ""
recaptchaSecret: ""
jwtKey: ""

# use external services to connect services from the outside world to
# the service, if required
externalServices: []

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# hummus web service deployment configuration
replicaCount: 1

image:
  repository: hummus
  pullPolicy: Never # as long as im using local images...
  tag: latest

resources:
  limits:
    cpu: "500m"
    memory: "256Mi"
  requests:
    cpu: "250m"
    memory: "128Mi"

containerPort: 8080

podAnnotations: 
  "prometheus.io/scrape": "true"
  "prometheus.io/path": /metrics
  "prometheus.io/port": "8080"  



service:
  type: NodePort
  port: 8080

# hummus ngynx ingress
ingress:
  enabled: true
  className: nginx
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: hummus
      paths:
        - path: /
          pathType: Prefix
          backendService: hummus
          backendPort: 8080
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local


# cronjob
cronjobSchedule: "0 0/1 * * *"
cronjobCommand:
  - npm
  - run
  - delete-timedout-files-cron


## Leftovers which i'm leaving for now

imagePullSecrets: []

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

## end values for hummus

metrics:
  enabled: false

prometheus:
  server:
    ingress:
      enabled: true
      ingressClassName: nginx
      hosts: 
        - prometheus

grafana:
  adminUser: admin
  adminPassword: admin
  ingress:
    enabled: true
    ingressClassName: nginx
    hosts:
      - grafana
# you will also probably want to define grafana datasources note that you should be used the
# service name below, for prometheus. it'll be http://<release-name>-prometheus-service
#  datasources:
#    datasources.yaml:
#      apiVersion: 1
#      datasources:
#      - name: Prometheus
#        type: prometheus
#        # Here's something i don't like so much...i need the actual service name...and it's based
#        # on the release name. could give up and say, install your own datasources..but what's the point...
#        # k. let's fix this if it ever matters
#        url: http://hummus-local-prometheus-server 
#        access: proxy
#        isDefault: true


logging:
  enabled: false


elasticsearch:
  # per example setup in: 
  # https://raw.githubusercontent.com/elastic/Helm-charts/master/elasticsearch/examples/minikube/values.yaml

  # Permit co-located instances for solitary minikube virtual machines.
  antiAffinity: "soft"

  # Shrink default JVM heap.
  esJavaOpts: "-Xmx128m -Xms128m"

  # Allocate smaller chunks of memory per pod.
  resources:
    requests:
      cpu: "100m"
      memory: "512M"
    limits:
      cpu: "1000m"
      memory: "512M"

  # Request smaller persistent volumes.
  volumeClaimTemplate:
    accessModes: [ "ReadWriteOnce" ]
    storageClassName: "standard"
    resources:
      requests:
        storage: 100M

kibana:
  ingress:
    enabled: true
    className: "nginx"
    pathtype: ImplementationSpecific
    annotations: {}
    hosts:
      - host: kibana
        paths:
          - path: /


fluentd:
  fileConfigs:
    01_sources.conf: |-
      ## logs from podman
      <source>
        @type tail
        @id in_tail_container_logs
        @label @KUBERNETES
        path /var/log/containers/*.log
        pos_file /var/log/fluentd-containers.log.pos
        tag kubernetes.*
        read_from_head true
        <parse>
          @type multi_format
          <pattern>
            format json
            time_key timestamp
            time_type string
            time_format "%Y-%m-%dT%H:%M:%S.%NZ"
            keep_time_key false
          </pattern>          
          <pattern>
            format regexp
            expression /^(?<time>.+) (?<stream>stdout|stderr)( (.))? (?<log>.*)$/
            time_format '%Y-%m-%dT%H:%M:%S.%NZ'
            keep_time_key false
          </pattern>
        </parse>
        emit_unmatched_lines true
      </source>
  
    02_filters.conf: |-
      <label @KUBERNETES>
        <match kubernetes.var.log.containers.fluentd**>
          @type relabel
          @label @FLUENT_LOG
        </match>

        # <match kubernetes.var.log.containers.**_kube-system_**>
        #   @type null
        #   @id ignore_kube_system_logs
        # </match>

        <filter kubernetes.**>
          @type kubernetes_metadata
          @id filter_kube_metadata
          skip_labels false
          skip_container_metadata false
          skip_namespace_metadata true
          skip_master_url true
        </filter>

        <filter kubernetes.**>
          @type parser
          key_name log
          reserve_data true
          remove_key_name_field true
          <parse>
            @type multi_format
            <pattern>
              format json
            </pattern>
            <pattern>
              format none
            </pattern>
          </parse>
        </filter>

        <filter kubernetes.**>
          @type parser
          key_name message
          reserve_data true
          remove_key_name_field true
          <parse>
            @type multi_format
            <pattern>
              format json
            </pattern>
            <pattern>
              format none
            </pattern>
          </parse>
        </filter>      

        <match **>
          @type relabel
          @label @DISPATCH
        </match>
      </label>